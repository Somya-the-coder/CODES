//Generate no. of valid Parenthesis from given pairs
class Solution {
    public List<String> generateParenthesis(int n) {
            List<String> res = new ArrayList<>();

            dfs(0,0,"",n,res);//dfs ke concept par working!

            return res;
    }
    private void dfs(int openP, int closeP, String s, int n, List<String> res){
        if(openP == closeP && openP+closeP == n*2){
            res.add(s);//arrList so each time adds differently / unique values
            return;
        }
        if(openP < n){
            dfs(openP+1,closeP, s+"(",n,res);//Recursion
        }

        if(closeP<openP)
        {
            dfs(openP, closeP+1,s+")",n,res);
        }
    }
}
